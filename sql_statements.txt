//get all expertise keywords
SELECT expertise, COUNT(expertise) AS frequency FROM expertise_table GROUP BY expertise ORDER BY frequency DESC


//get all interest keywords
SELECT interest, COUNT(interest) AS frequency FROM interest_table GROUP BY interest ORDER BY frequency DESC


//get all interest keywords
SELECT question, COUNT(question) AS frequency FROM questions_table GROUP BY question ORDER BY frequency DESC


//get all check-ins with details of checked-in users and timestamp/time passed since checkin (a VIEW has been created for this purpose.. see query below)
SELECT * FROM `view_checkins`
	----
	//VIEW: view_checkins, time_zone setting is important to get the timestampdiff right, independent of the mysql server's local time
	SET time_zone = '+10:00';
	SELECT eu.id AS edge_user_id, eu.firstname, eu.lastname, eu.occupation, eu.statusmessage, imt.name AS imt_name, im.ThirdPartyID AS im_id, check_in.check_in_time AS checkin_timestamp, (SELECT TIMESTAMPDIFF(MONTH, check_in.check_in_time, (SELECT NOW()))) AS months_since_checkin, (SELECT TIMESTAMPDIFF(DAY, check_in.check_in_time, (SELECT NOW()))) AS days_since_checkin, (SELECT TIMESTAMPDIFF(HOUR, check_in.check_in_time, (SELECT NOW()))) AS hours_since_checkin, (SELECT TIMESTAMPDIFF(MINUTE, check_in.check_in_time, (SELECT NOW()))) AS minutes_since_checkin, check_in.sublocation AS checkin_sublocation FROM (((identification_media im JOIN identification_media_type imt ON im.type = imt.id) JOIN people ON people.identification_id = im.id) JOIN edge_users eu ON eu.id = people.edge_users_id) JOIN check_in ON check_in.identification_media_id = im.id ORDER BY checkin_timestamp;


//all check-ins within the last x months/days/hours/minutes. only the most recent checkin per edge_user in the given timeperiod is returned
SELECT edge_user_id, firstname, lastname, occupation, statusmessage, imt_name, im_id, MAX(checkin_timestamp) AS checkin_timestamp_mostrecent, months_since_checkin, days_since_checkin, hours_since_checkin, minutes_since_checkin, checkin_sublocation FROM `view_checkins` WHERE days_since_checkin < 1 GROUP BY edge_user_id ORDER BY checkin_timestamp_mostrecent

	//OTHER POSSIBLE VARIABLES
	months_since_checkin < 7	//checkins in the last 6 months
	days_since_checkin < 1		//only today's checkins
	hours_since_checkin < 3		//checkins in the last 2 hours
	minutes_since_checkin < 11	//checkins in the last 10 minutes


// get all expertise keywords from a particular checked_in user (im.thirdpartyid)
SELECT et.expertise FROM (((((identification_media im JOIN identification_media_type imt ON im.type = imt.id) JOIN people ON people.identification_id = im.id) JOIN edge_users eu ON eu.id = people.edge_users_id) JOIN check_in ON (check_in.identification_media_id = im.id)) JOIN expertise_table et ON et.edge_users_id = eu.id) WHERE eu.id =  28

	//alternatively use edge_user_id to filter a particular user
	WHERE eu.id = 28 instead of
	WHERE im.thirdpartyid = 5408543


// get all interest keywords from a particular checked_in user
SELECT it.interest FROM (((((identification_media im JOIN identification_media_type imt ON im.type = imt.id) JOIN people ON people.identification_id = im.id) JOIN edge_users eu ON eu.id = people.edge_users_id) JOIN check_in ON (check_in.identification_media_id = im.id)) JOIN interest_table it ON it.edge_users_id = eu.id) WHERE im.thirdpartyid = 123456


// get all questions from a particular checked_in user
SELECT qt.question FROM (((((identification_media im JOIN identification_media_type imt ON im.type = imt.id) JOIN people ON people.identification_id = im.id) JOIN edge_users eu ON eu.id = people.edge_users_id) JOIN check_in ON (check_in.identification_media_id = im.id)) JOIN questions_table qt ON qt.edge_users_id = eu.id) WHERE im.thirdpartyid = 123456


//Check-in Highscore list: gets number of times a user has distinctively checked in on different days
//Enables statements such as: "Congratulations: You have checked in on 10 different days at The Edge"
SELECT edge_user_id, firstname, lastname, COUNT(*) AS distinct_checkindays FROM ((SELECT * FROM `view_checkins` GROUP BY edge_user_id, DATE(checkin_timestamp)) AS summary) GROUP BY edge_user_id ORDER BY distinct_checkindays DESC